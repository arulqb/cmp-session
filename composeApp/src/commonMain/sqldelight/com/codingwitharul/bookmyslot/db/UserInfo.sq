import kotlin.Boolean;

CREATE TABLE UserInfo (
    userId TEXT PRIMARY KEY NOT NULL,
    userName TEXT,
    email TEXT UNIQUE,
    phoneNumber TEXT UNIQUE,
    photoUri TEXT,
    authToken TEXT,
    providerId TEXT,
    displayName TEXT,
    bio TEXT,
    dateOfBirth TEXT,
    lastLoginAt INTEGER,
    isLoggedIn INTEGER AS Boolean NOT NULL DEFAULT 0,
    isUserOnBoarded INTEGER AS Boolean NOT NULL DEFAULT 0,

    createdAt INTEGER NOT NULL DEFAULT (strftime('%s', 'now') * 1000),
    updatedAt INTEGER NOT NULL DEFAULT (strftime('%s', 'now') * 1000)
);

insertUser:
INSERT OR REPLACE INTO UserInfo (
    userId,
    userName,
    email,
    phoneNumber,
    photoUri,
    authToken,
    providerId,
    displayName,
    bio,
    dateOfBirth,
    lastLoginAt,
    isLoggedIn
    -- createdAt and updatedAt have defaults or are handled by triggers
) VALUES (?,  ?, ?, ?, ?, ?, ?, ?,?, ?, ?, ?);

-- If you want createdAt and updatedAt to be explicitly set sometimes,
-- or to update them without relying solely on the trigger for updatedAt:
insertOrUpdateUserWithTimestamps:
INSERT OR REPLACE INTO UserInfo (
    userId,
    userName,
    email,
    phoneNumber,
    photoUri,
    authToken,
    providerId,
    displayName,
    bio,
    dateOfBirth,
    lastLoginAt,
    isLoggedIn,
    createdAt,
    updatedAt
) VALUES (  ?,?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);


-- READ Operations
getUserById:
SELECT * FROM UserInfo
WHERE userId = ?;

getLoggedInUser:
SELECT * FROM UserInfo
WHERE isLoggedIn = 1;

getUserByEmail:
SELECT * FROM UserInfo
WHERE email = ?;

getAllUsers:
SELECT * FROM UserInfo
ORDER BY createdAt DESC;

-- UPDATE Operations

-- Update specific fields for a user
updateUserProfile:
UPDATE UserInfo
SET userName = ?,
    displayName = ?,
    bio = ?,
    photoUri = ?,
    dateOfBirth = ?
    -- updatedAt will be handled by the trigger
WHERE userId = ?;


updateUserAuthToken:
UPDATE UserInfo
SET authToken = ?
    -- updatedAt will be handled by the trigger
WHERE userId = ?;

updateLastLogin:
UPDATE UserInfo
SET lastLoginAt = ?
    -- updatedAt will be handled by the trigger
WHERE userId = ?;

updateUserOnBoardStatus:
UPDATE UserInfo
SET isUserOnBoarded = ?
WHERE isLoggedIn = 1;

-- DELETE Operation
deleteUserById:
DELETE FROM UserInfo
WHERE userId = ?;

deleteAllUsers:
DELETE FROM UserInfo;